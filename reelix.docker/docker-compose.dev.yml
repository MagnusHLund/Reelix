# docker-compose -f docker-compose.dev.yml up --build

services:
  dev-nginx:
    image: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped
    depends_on:
      - dev-web
      - dev-api

  dev-web:
    image: node:22
    working_dir: /app
    volumes:
      - ./../reelix.frontend/reelix.website/:/app
      - /app/node_modules
    ports:
      - 766:766
    command: ['sh', '-c', 'cd /app && npm install && npm run dev']
    restart: unless-stopped
    depends_on:
      - dev-api

  dev-api:
    image: mcr.microsoft.com/dotnet/sdk:9.0
    working_dir: /app
    volumes:
      - ./../reelix.api/ReelixApi:/app
    ports:
      - 667:667
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    command: ['dotnet', 'watch', 'run']
    restart: unless-stopped
    depends_on:
      - dev-mysql
      - dev-neo4j

  dev-mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: your_database
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - 3306:3306
    volumes:
      - mysql_data:/var/lib/mysql
    restart: unless-stopped

  dev-neo4j:
    image: neo4j:latest
    environment:
      - NEO4J_AUTH=neo4j/password
    ports:
      - 7474:7474
      - 7687:7687
    volumes:
      - neo4j_data:/data
    restart: unless-stopped

volumes:
  mysql_data:
  neo4j_data:
