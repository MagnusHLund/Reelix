# docker-compose -f docker-compose.dev.yml up --build

services:
  nginx:
    image: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web
      - api

  web:
    image: node:18
    working_dir: /app
    volumes:
      - ./../reelix.frontend/reelix.website/:/app
      - /app/node_modules
    ports:
      - "7667:7667"
    command: sh -c "cd /app && npm install && npm run dev"
    depends_on:
      - api

  api:
    image: mcr.microsoft.com/dotnet/aspnet:9.0
    working_dir: /app
    volumes:
      - ./../reelix.api/:/app
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    command: dotnet watch run
    depends_on:
      - mysql
      - neo4j

  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: your_database
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  neo4j:
    image: neo4j:latest
    environment:
      - NEO4J_AUTH=neo4j/password
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data

volumes:
  mysql_data:
  neo4j_data:
